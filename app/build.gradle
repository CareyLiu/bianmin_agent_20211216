apply plugin: 'com.android.application'

android {
    signingConfigs {
        debug {
            keyAlias 'release'
            keyPassword 'sdkj001'
            storeFile file('C:/keystore/shangjiaduan.jks')
            storePassword 'sdkj001'
        }
        release {
            keyAlias 'release'
            keyPassword 'sdkj001'
            storeFile file('C:/keystore/shangjiaduan.jks')
            storePassword 'sdkj001'
        }
    }


    compileSdkVersion 29
    buildToolsVersion "29.0.2"

    defaultConfig {
        applicationId "com.shendeng.agent"
        minSdkVersion 18
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    repositories {
        mavenCentral()
//        maven {
//            url "http://maven..com/nexus/content/repositories/releases"
//        }
        maven {
            url "https://repo.eclipse.org/content/repositories/paho-snapshots/"
        }
        maven { url "https://www.jitpack.io" }
    }

    compileOptions {

        sourceCompatibility JavaVersion.VERSION_1_8

        targetCompatibility JavaVersion.VERSION_1_8

    }
    packagingOptions {
        //解决编译时com.android.builder.merge.DuplicateRelativeFileException: More than one file was found with OS independent path 'META-INF/rxjava.properties'这个错误
        exclude 'META-INF/rxjava.properties'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.constraintlayout:constraintlayout'
    implementation 'com.jakewharton:butterknife:10.0.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.appcompat:appcompat:1.1.0'

    implementation 'com.github.bumptech.glide:glide:4.11.0'
    implementation 'com.lzy.net:okgo:3.0.4'
    // 基础依赖包，必须要依赖
    implementation 'com.gyf.immersionbar:immersionbar:2.3.3'
    implementation 'com.google.code.gson:gson:2.8.2'
    implementation 'com.squareup.picasso:picasso:2.5.2'
    implementation 'com.jakewharton:butterknife:7.0.1'
    implementation 'io.reactivex:rxandroid:1.0.1'
    implementation 'io.reactivex:rxjava:1.0.14'
    implementation 'io.reactivex:rxjava-math:1.0.0'
    implementation 'com.trello:rxlifecycle:0.3.0'
    implementation 'com.trello:rxlifecycle-components:0.3.0'
    implementation 'com.jakewharton.rxbinding:rxbinding:0.3.0'
    implementation 'com.jakewharton.rxbinding:rxbinding-support-v4:0.3.0'
    implementation 'com.jakewharton.rxbinding:rxbinding-appcompat-v7:0.3.0'
    implementation 'com.jakewharton.rxbinding:rxbinding-recyclerview-v7:0.3.0'
    implementation 'com.squareup.retrofit2:retrofit:2.0.0-beta4'
    implementation 'com.squareup.retrofit2:adapter-rxjava:2.0.0-beta4'
    implementation 'com.squareup.retrofit2:converter-gson:2.0.0-beta4'
    implementation 'com.squareup.okhttp3:okhttp:3.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.8.0'
    implementation 'com.tbruyelle.rxpermissions:rxpermissions:0.9.0@aar'
    implementation 'de.hdodenhof:circleimageview:2.1.0'
    /**
     *   Android智能下拉刷新框架-SmartRefreshLayout
     *   https://github.com/scwang90/SmartRefreshLayout
     * */
    implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.0-alpha-5'
    implementation 'com.scwang.smartrefresh:SmartRefreshHeader:1.1.0-alpha-5'
    /**
     *    RecyclerView的强大的BaseAdapter
     * */
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.46'
    implementation 'com.billy.android:gloading:1.1.0'
    // This is the use of androidx, if you are using the android.support: fragmentationx -> fragmentation
    implementation 'me.yokeyword:fragmentationx:1.0.2'

// If you don't want to extends SupportActivity/Fragment and would like to customize your own support, just rely on fragmentation-core
// implementation 'me.yokeyword:fragmentationx-core:1.0.2'

// To get SwipeBack feature, rely on both fragmentation & fragmentation-swipeback
    implementation 'me.yokeyword:fragmentationx:1.0.2'
// Swipeback is based on fragmentation. Refer to SwipeBackActivity/Fragment for your Customized SupportActivity/Fragment
    implementation 'me.yokeyword:fragmentationx-swipeback:1.0.2'
    /*Rx生命周期管理*/
    implementation 'com.trello.rxlifecycle2:rxlifecycle:2.2.0'
    implementation 'com.trello.rxlifecycle2:rxlifecycle-components:2.2.0'
    implementation 'com.blankj:utilcode:1.29.0'
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'cn.rongcloud.sdk:im_lib:2.10.5'
    implementation 'cn.rongcloud.sdk:im_kit:2.10.5'

    //微信sdk
    implementation 'com.tencent.mm.opensdk:wechat-sdk-android-without-mta:+'
    //选择器
    implementation 'com.contrarywind:Android-PickerView:4.1.9'
    //轮播图
    implementation 'com.youth.banner:banner:1.4.9'
}
